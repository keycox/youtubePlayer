{"version":3,"sources":["images/icon_mdi_home.svg","images/icon_mdi_playlist_add.svg","components/searchSuggest.js","components/search.js","components/dismissible.js","components/dismissibleItem.js","components/playlist-item.js","components/playlist.js","components/moviePlayer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchSuggest","props","state","this","flag","id","className","onClick","viewPlayer","src","url","alt","title","Component","Search","searchInput","React","createRef","seachInputCloase","document","getElementById","focus","type","placeholder","onChange","validation","bind","onFocus","value","ref","clearInput","setSearchedPlayingInfo","cngDismissible","event","youtubeUrl","target","length","current","classList","add","domain","slice","resetStateSuggest","movieID","split","getMovieInfo","prm","i","movieId","_this","fetch","then","response","console","log","status","json","data","setStateSuggest","items","catch","err1","setState","snippet","thumbnails","high","remove","Dismissible","cngIndex","selectedIndex","children","DismissibleItem","PlaylistItem","anchorEl","snackbarText","currentTarget","openSnackBar","removePlaylist","open","reason","setPlayingInfo","playingInfo","aria-controls","aria-haspopup","menuOpen","Menu","keepMounted","Boolean","onClose","menuClose","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeSnackBar","message","action","Fragment","IconButton","size","aria-label","color","fontSize","Playlist","playlist","playlistInfo","map","info","index","key","cookie","getCookie","cookieData","playlistArray","decodeURIComponent","setStatePlaylist","playlistData","push","MoviePlayer","player","more","menuItem","opts","height","width","playerVars","autoplay","controls","showinfo","modestbranding","rel","loop","playlingInfo","playingIndex","addPlaylist","YouTube","videoId","onReady","_onReady","onEnd","_onEnd","name","defaultValue","speedSelect_onChange","pauseVideo","seekTo","setPlaybackRate","Number","stopVideo","App","tabIndex","dismissibleIndex1","dismissibleIndex2","searchedPlayingInfo","onSelect","iconHome","iconAddPlaylist","num","newPlaylistInfo","setCookie","splice","encodeURIComponent","join","Date","toUTCString","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.509d8570.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon_mdi_home.58a50f33.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_mdi_playlist_add.b9c17c8e.svg\";","import React, { Component } from \"react\";\r\n\r\nexport default class SearchSuggest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  render() {\r\n    if (this.props.flag === true) {\r\n      if (this.props.id) {\r\n        return (\r\n          <div className=\"searchbox-suggest\">\r\n            <div className=\"searchbox-suggest__result\" onClick={this.props.viewPlayer}>\r\n              <div className=\"searchbox-suggest__thumbnail\">\r\n                <img src={this.props.url} alt={this.props.title} />\r\n              </div>\r\n              <div className=\"searchbox-suggest__title typo_body2\">{this.props.title}</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"searchbox-suggest\">\r\n            <div className=\"searchbox-suggest__notresult typo_body2\">\r\n              動画がみつかりません。\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport SearchSuggest from \"./searchSuggest\";\r\nimport \"./search.scss\";\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      flag: false,\r\n      id: \"\",\r\n      title: \"\",\r\n      url: \"\",\r\n      searchInput : React.createRef(),\r\n      seachInputCloase : React.createRef()\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    document.getElementById(\"seachbox\").focus();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"searchbox\">\r\n        <div className=\"input-text\">\r\n          <input\r\n            id=\"seachbox\"\r\n            type=\"text\"\r\n            placeholder=\"Youtube動画URL\"\r\n            onChange={this.validation.bind(this)}\r\n            onFocus={() => (this.value = \"\")}\r\n            ref={this.state.searchInput}\r\n          />\r\n          <button className={\"input-text__close\"} onClick={this.clearInput.bind(this)} ref={this.state.seachInputCloase}>x</button>\r\n        </div>\r\n        <SearchSuggest\r\n          flag={this.state.flag}\r\n          id={this.state.id}\r\n          title={this.state.title}\r\n          url={this.state.url}\r\n          viewPlayer={this.viewPlayer.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  // サジェストクリックでプレイヤーを表示\r\n  viewPlayer() {\r\n    //プレイヤー表示\r\n    this.props.setSearchedPlayingInfo({\r\n      id: this.state.id,\r\n      title: this.state.title,\r\n      url: this.state.url\r\n    });\r\n    this.props.cngDismissible(1);\r\n  }\r\n  // youtubeIdチェック\r\n  validation(event) {\r\n    const youtubeUrl = event.target.value;\r\n    //クローズボタン\r\n    if(youtubeUrl.length>0){\r\n      this.state.seachInputCloase.current.classList.add(\"view\");\r\n    }\r\n    const domain = youtubeUrl.slice(0, 17);\r\n    this.resetStateSuggest();\r\n\r\n    if (domain === \"https://youtu.be/\") {\r\n      const movieID = youtubeUrl.split(\"https://youtu.be/\")[1];\r\n      if (movieID.length === 11) {\r\n        this.getMovieInfo(movieID);\r\n      }\r\n    } else if (domain === \"https://www.youtu\") {\r\n      if (youtubeUrl.split(\"?\")[1]) {\r\n        var prm = youtubeUrl.split(\"?\")[1].split(\"&\");\r\n        for (var i = 0; i < prm.length; i++) {\r\n          if (\r\n            prm[i].split(\"=\")[1] &&\r\n            prm[i].split(\"=\")[0] === \"v\" &&\r\n            prm[i].split(\"=\")[1].length === 11\r\n          ) {\r\n            this.getMovieInfo(prm[i].split(\"=\")[1]);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // 動画情報を取得\r\n  getMovieInfo(movieId) {\r\n    const _this = this;\r\n    const APIKey = \"AIzaSyA3BlWUSIlLKKY_C5HDh_APSKsJeKBwPE0\";\r\n    fetch(\r\n      \"https://www.googleapis.com/youtube/v3/videos?id=\" +\r\n        movieId +\r\n        \"&key=\" +\r\n        APIKey +\r\n        \"&part=snippet\"\r\n    )\r\n      .then(function(response) {\r\n        console.log(\"status=\" + response.status); //例 200\r\n        return response.json();\r\n      })\r\n      .then(function(data) {\r\n        _this.setStateSuggest(data.items);\r\n      })\r\n      .catch(function(err1) {});\r\n  }\r\n  setStateSuggest(items) {\r\n    if (items.length >= 1) {\r\n      this.setState({ id: items[0].id });\r\n      this.setState({ title: items[0].snippet.title });\r\n      this.setState({ url: items[0].snippet.thumbnails.high.url });\r\n      this.setState({ flag: true });\r\n    }\r\n  }\r\n  //サジェスト情報をリセット\r\n  resetStateSuggest() {\r\n    this.setState({ id: \"\" });\r\n    this.setState({ title: \"\" });\r\n    this.setState({ url: \"\" });\r\n    this.setState({ flag: false });\r\n  }\r\n  clearInput(){\r\n    this.state.searchInput.current.value=\"\";\r\n    this.state.seachInputCloase.current.classList.remove(\"view\");\r\n    this.resetStateSuggest()\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./dismissible.scss\";\r\n\r\nexport default class Dismissible extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    this.props.cngIndex(0);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={\"l-dismessible current\" + this.props.selectedIndex}>\r\n        <div className=\"l-dismessible__wrap\">\r\n          {this.props.children}\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class DismissibleItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"l-dismessible__item\">\r\n          {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n  setCurrent(){\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n\r\nexport default class PlaylistItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null,\r\n      snackbarText:\"\"\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n\r\n  menuOpen(event) {\r\n    //setAnchorEl(event.currentTarget);\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  }\r\n  menuClose() {\r\n    this.setState({ anchorEl: null });\r\n  }\r\n  removePlaylist(){\r\n    this.setState({snackbarText:\"プレイリストから削除しました\"});\r\n    this.openSnackBar();\r\n    this.setState({ anchorEl: null });\r\n    this.props.removePlaylist();\r\n  }\r\n  openSnackBar() {\r\n    this.setState({ open: true });\r\n  }\r\n  closeSnackBar(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ open: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"playlist__item\">\r\n        <div\r\n          className=\"playlist__title\"\r\n          onClick={() => this.props.setPlayingInfo(this.props.playingInfo)}\r\n        >\r\n          <figure>\r\n            <img\r\n              src={this.props.playingInfo.url}\r\n              alt={this.props.playingInfo.title}\r\n            ></img>\r\n          </figure>\r\n          <div className=\"playlist__text typo_body2\">\r\n            {this.props.playingInfo.title}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"playlist__more\">\r\n          <button\r\n            className=\"more-button\"\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={this.menuOpen.bind(this)}\r\n          ></button>\r\n        </div>\r\n\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={this.state.anchorEl}\r\n          keepMounted\r\n          open={Boolean(this.state.anchorEl)}\r\n          onClose={this.menuClose.bind(this)}\r\n        >\r\n          <MenuItem onClick={this.removePlaylist.bind(this)}>\r\n            プレイリストから削除\r\n          </MenuItem>\r\n        </Menu>\r\n\r\n        <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"left\"\r\n            }}\r\n            open={this.state.open}\r\n            autoHideDuration={3000}\r\n            onClose={this.closeSnackBar.bind(this)}\r\n            message={this.state.snackbarText}\r\n            action={\r\n              <React.Fragment>\r\n                <IconButton\r\n                  size=\"small\"\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  onClick={this.closeSnackBar.bind(this)}\r\n                >\r\n                  <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PlaylistItem from \"./playlist-item\";\r\nimport \"./playlist.scss\";\r\n\r\nexport default class Playlist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  render() {\r\n    let playlist = this.props.playlistInfo.map((info, index) => (\r\n      <PlaylistItem\r\n        key={index}\r\n        index={index}\r\n        playingInfo={info}\r\n        setPlayingInfo={playingInfo => this.setPlayingInfo(playingInfo)}\r\n        removePlaylist={()=>this.props.removePlaylist(index)}\r\n      />\r\n    ));\r\n\r\n    if (this.props.playlistInfo.length > 0) {\r\n      return <div className=\"playlist\">{playlist}</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"playlist\">\r\n          <div className=\"playlist__item\">\r\n            <div className=\"playlist__title\">プレイリストはありません</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    //アプリ起動時のみクッキー取得\r\n    if (this.props.playlistInfo.length === 0 && document.cookie) {\r\n      this.getCookie();\r\n    }else{\r\n      //document.cookie = \"movie_id=\" + encodeURIComponent(\"vWYOKFi8pd8\") + \";expires=\" + new Date('2025/1/1').toUTCString();\r\n      //this.getCookie();\r\n    }\r\n  }\r\n  /**\r\n   * cookie を取得\r\n   */\r\n  getCookie() {\r\n    let cookieData = document.cookie.split(\";\");\r\n    //id:movie_idのcookie取り出し\r\n    for (var i=0; i<cookieData.length; i++){\r\n      if(cookieData[i].split(\"=\")[0]===\"movie_id\"){\r\n        let playlistArray=decodeURIComponent(cookieData[i].split(\"=\")[1]).split(\",\");\r\n        this.getMovieInfo(playlistArray);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * cookie を保存\r\n   */\r\n  setCookie() {\r\n  }\r\n  /**\r\n   *  youtubeAPIで動画情報を取得\r\n   */\r\n  getMovieInfo(playlistArray) {\r\n    const APIKey = \"AIzaSyA3BlWUSIlLKKY_C5HDh_APSKsJeKBwPE0\";\r\n    var _this = this;\r\n    fetch(\r\n      \"https://www.googleapis.com/youtube/v3/videos?id=\" +\r\n        playlistArray +\r\n        \"&key=\" +\r\n        APIKey +\r\n        \"&part=snippet\"\r\n    )\r\n      .then(function(response) {\r\n        console.log(\"status=\" + response.status); //例 200\r\n        return response.json();\r\n      })\r\n      .then(function(data) {\r\n        _this.setStatePlaylist(data.items);\r\n      })\r\n      .catch(function(err1) {\r\n        console.log(\"err=\" + err1);\r\n      });\r\n  }\r\n  /*\r\n   * 読み込んだjsonプレイリストを親コンポーネントのstateにセット\r\n   */\r\n  setStatePlaylist(items) {\r\n    var playlistData = [];\r\n    for (let i = 0; i < items.length; i++) {\r\n      playlistData.push({\r\n        id: items[i].id,\r\n        title: items[i].snippet.title,\r\n        url: items[i].snippet.thumbnails.high.url\r\n      });\r\n    }\r\n    this.props.setStatePlaylist(playlistData);\r\n  }\r\n\r\n  /*\r\n   * 再生中を変更\r\n   */\r\n  setPlayingInfo(playingInfo) {\r\n    this.props.setPlayingInfo(playingInfo);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport \"./movieplayer.scss\";\r\n\r\nexport default class MoviePlayer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      player: \"\",\r\n      open: null,\r\n      anchorEl: null,\r\n      snackbarText:\"\"\r\n    };\r\n  }\r\n  componentDidMount(){}\r\n  render() {\r\n    const opts = {\r\n      height: \"390\",\r\n      width: \"640\",\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 0,\r\n        controls: 1,\r\n        showinfo: 0,\r\n        modestbranding: 0,\r\n        rel: 0,\r\n        loop: 1,\r\n        modestbranding: 0\r\n      }\r\n    };\r\n    let more;\r\n    let menuItem;\r\n    //let snackbarText;\r\n    const playlingInfo = this.props.playingInfo;\r\n    const playlistInfo = this.props.playlistInfo;\r\n\r\n    let playingIndex = -1;\r\n    if (playlingInfo.id) {\r\n      for (var i = 0; i < playlistInfo.length; i++) {\r\n        if (playlingInfo.id === playlistInfo[i].id) {\r\n          playingIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    /// プレイリストに入っていない場合\r\n    if (playingIndex === -1) {\r\n      //console.log(\"プレイリストにはいっていない\");\r\n      more = (\r\n        <button\r\n          className=\"add-button\"\r\n          aria-controls=\"simple-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={this.menuOpen.bind(this)}\r\n        ></button>\r\n      );\r\n      menuItem = (\r\n        <div onClick={() => this.addPlaylist(playlingInfo.id)}>\r\n          プレイリストに追加\r\n        </div>\r\n      );\r\n      //snackbarText = (\"プレイリストに追加しました\");\r\n    }\r\n    /// プレイリストに入っている場合\r\n    else {\r\n      //console.log(\"プレイリストにはいっている\");\r\n      more = (\r\n        <button\r\n          className=\"more-button\"\r\n          aria-controls=\"simple-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={this.menuOpen.bind(this)}\r\n        ></button>\r\n      );\r\n      menuItem = (\r\n        <div onClick={() => this.removePlaylist()}>プレイリストから削除</div>\r\n      );\r\n      //snackbarText = \"プレイリストから削除しました\";\r\n    }\r\n    if (playlingInfo) {\r\n      return (\r\n        <div className=\"movie-player\">\r\n          <div>\r\n            <div className=\"l-unit\">\r\n              <div id=\"youtubeplayer\">\r\n                <YouTube\r\n                  videoId={playlingInfo.id}\r\n                  opts={opts}\r\n                  onReady={this._onReady.bind(this)}\r\n                  onEnd={this._onEnd.bind(this)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"l-unit\">\r\n              <div className=\"player-title\">\r\n                <h5 className=\"\">\r\n                  <span>{playlingInfo.title}</span>\r\n                </h5>\r\n                <div className=\"player-title__more\">{more}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"l-unit\">\r\n            <select\r\n              name=\"speed\"\r\n              id=\"speed\"\r\n              defaultValue={\"1\"}\r\n              onChange={this.speedSelect_onChange.bind(this)}\r\n            >\r\n              <option value=\"0.5\">50%</option>\r\n              <option value=\"0.55\">55%</option>\r\n              <option value=\"0.6\">60%</option>\r\n              <option value=\"0.65\">65%</option>\r\n              <option value=\"0.7\">70%</option>\r\n              <option value=\"0.75\">75%</option>\r\n              <option value=\"0.8\">80%</option>\r\n              <option value=\"0.85\">85%</option>\r\n              <option value=\"0.9\">90%</option>\r\n              <option value=\"0.95\">95%</option>\r\n              <option value=\"1\">100%</option>\r\n            </select>\r\n          </div>\r\n\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={this.state.anchorEl}\r\n            keepMounted\r\n            open={Boolean(this.state.anchorEl)}\r\n            onClose={this.menuClose.bind(this)}\r\n          >\r\n            <MenuItem onClick={this.menuClose.bind(this)}>{menuItem}</MenuItem>\r\n          </Menu>\r\n\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"left\"\r\n            }}\r\n            open={this.state.open}\r\n            autoHideDuration={3000}\r\n            onClose={this.closeSnackBar.bind(this)}\r\n            message={this.state.snackbarText}\r\n            action={\r\n              <React.Fragment>\r\n                <IconButton\r\n                  size=\"small\"\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  onClick={this.closeSnackBar.bind(this)}\r\n                >\r\n                  <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>error</div>;\r\n    }\r\n  }\r\n  _onReady(event) {\r\n    this.setState({ player: event.target });\r\n    event.target.pauseVideo();\r\n  }\r\n  _onEnd(event) {\r\n    event.target.seekTo(0);\r\n    event.target.pauseVideo();\r\n  }\r\n  speedSelect_onChange(event) {\r\n    if (this.state.player) {\r\n      this.state.player.setPlaybackRate(Number(event.target.value));\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.player) {\r\n      this.state.player.stopVideo();\r\n    }\r\n  }\r\n\r\n  addPlaylist(movieId) {\r\n    this.setState({snackbarText:\"プレイリストに追加しました\"});\r\n    this.openSnackBar();\r\n    this.props.addPlaylist(movieId);\r\n  }\r\n  removePlaylist() {\r\n    this.setState({snackbarText:\"プレイリストから削除しました\"});\r\n    this.openSnackBar();\r\n    this.props.removePlaylist();\r\n  }\r\n\r\n  menuOpen(event) {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  }\r\n  menuClose() {\r\n    this.setState({ anchorEl: null });\r\n  }\r\n\r\n  openSnackBar() {\r\n    this.setState({ open: true });\r\n  }\r\n  closeSnackBar(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ open: false });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.scss\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\n\r\nimport Search from \"./components/search\";\r\nimport Dismissible from \"./components/dismissible\";\r\nimport DismissibleItem from \"./components/dismissibleItem\";\r\nimport Playlist from \"./components/playlist\";\r\nimport MoviePlayer from \"./components/moviePlayer\";\r\n\r\nimport iconHome from \"./images/icon_mdi_home.svg\";\r\nimport iconAddPlaylist from \"./images/icon_mdi_playlist_add.svg\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playingIndex: \"\", //再生選択中の動画Index\r\n      playlistInfo: [], //プレイリストのID,title,サムネイルURLがはいった配列\r\n      tabIndex: 0, //選択中タブ\r\n      dismissibleIndex1: 0, //選択中スライドパネル\r\n      dismissibleIndex2: 0, //選択中スライドパネル\r\n      searchedPlayingInfo: \"\", // サーチで探して再生する動画情報\r\n      playingInfo: [] //プレイリストから再生中の動画情報\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"l-wrap\">\r\n        <Tabs\r\n          selectedIndex={this.state.tabIndex}\r\n          onSelect={tabIndex => this.setState({ tabIndex })}\r\n        >\r\n          <TabList>\r\n            <Tab>\r\n              <div\r\n                className=\"bottomnav-icon\"\r\n                onClick={() => this.setState({ dismissibleIndex1: 0 })}\r\n              >\r\n                <div className=\"bottomnav-icon__img\">\r\n                  <img src={iconHome} alt=\"ホーム\" />\r\n                </div>\r\n                <div className=\"bottomnav-icon__text color_white100\">\r\n                  ホーム\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n            <Tab>\r\n              <div\r\n                className=\"bottomnav-icon\"\r\n                onClick={() => this.setState({ dismissibleIndex2: 0 })}\r\n              >\r\n                <div className=\"bottomnav-icon__img\">\r\n                  <img src={iconAddPlaylist} alt=\"曲を追加\" />\r\n                </div>\r\n                <div className=\"bottomnav-icon__text color_white100\">\r\n                  曲を追加\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n          </TabList>\r\n\r\n          {/*////////// タブ1 /////////*/}\r\n          <TabPanel>\r\n            <Dismissible\r\n              selectedIndex={this.state.dismissibleIndex1}\r\n              cngIndex={index => this.setState({ dismissibleIndex1: index })}\r\n            >\r\n              <DismissibleItem>\r\n                <div className=\"l-contwrap\">\r\n                  <div className=\"l-scroll\">\r\n                    <section>\r\n                      <div className=\"searchbox\">\r\n                        <div className=\"input-text\">\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Youtube動画URL\"\r\n                            onFocus={() => this.setState({ tabIndex: 1 })}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </section>\r\n                    <section>\r\n                      <h3 className=\"color_white100 typo_headline5\">\r\n                        Playlist\r\n                      </h3>\r\n                      <div className=\"l-unit\">\r\n                        <Playlist\r\n                          playlistInfo={this.state.playlistInfo}\r\n                          setStatePlaylist={playlistInfo =>\r\n                            this.setStatePlaylist(playlistInfo)\r\n                          }\r\n                          setPlayingInfo={playingInfo =>\r\n                            this.setPlayingInfo(playingInfo)\r\n                          }\r\n                          removePlaylist={index => this.removePlaylist(index)}\r\n                        />\r\n                      </div>\r\n                    </section>\r\n                  </div>\r\n                </div>\r\n              </DismissibleItem>\r\n              <DismissibleItem>\r\n                <div className=\"l-contwrap fixtop\">\r\n                  <div className=\"l-unit\">\r\n                    <button\r\n                      className=\"btn-back\"\r\n                      onClick={() => this.setState({ dismissibleIndex1: 0 })}\r\n                    >\r\n                      ＜\r\n                    </button>\r\n                    <section>\r\n                      <MoviePlayer\r\n                        playingInfo={this.state.playingInfo}\r\n                        playlistInfo={this.state.playlistInfo}\r\n                        removePlaylist={index => this.removePlaylist(index)}\r\n                      />\r\n                    </section>\r\n                  </div>\r\n                </div>\r\n              </DismissibleItem>\r\n            </Dismissible>\r\n          </TabPanel>\r\n\r\n          {/*////////// タブ2 /////////*/}\r\n          <TabPanel>\r\n              <Dismissible\r\n                selectedIndex={this.state.dismissibleIndex2}\r\n                cngIndex={index => this.setState({ dismissibleIndex2: index })}\r\n              >\r\n                <DismissibleItem>\r\n                  <section>\r\n                  <div className=\"l-contwrap\">\r\n                    <Search\r\n                      cngDismissible={index =>\r\n                        this.setState({ dismissibleIndex2: index })\r\n                      }\r\n                      setSearchedPlayingInfo={playingInfo =>\r\n                        this.setState({ searchedPlayingInfo: playingInfo })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  </section>\r\n                </DismissibleItem>\r\n                <DismissibleItem>\r\n                  <div className=\"l-contwrap fixtop\">\r\n                    <div className=\"l-unit\">\r\n                      <button\r\n                        className=\"btn-back\"\r\n                        onClick={() => this.setState({ dismissibleIndex2: 0 })}\r\n                      >\r\n                        ＜\r\n                      </button>\r\n                      <section>\r\n                        <MoviePlayer\r\n                          playingInfo={this.state.searchedPlayingInfo}\r\n                          playlistInfo={this.state.playlistInfo}\r\n                          removePlaylist={index => this.removePlaylist(index)}\r\n                          addPlaylist={movieId => this.addPlaylist(movieId)}\r\n                        />\r\n                      </section>\r\n                    </div>\r\n                  </div>\r\n                </DismissibleItem>\r\n              </Dismissible>\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n  /*\r\n   * タブ切り替え\r\n   */\r\n  cngTab(num) {\r\n    this.setState({ tabIndex: num });\r\n  }\r\n  /**\r\n   * 読み込んだプレイリスト情報をStateにセット\r\n   */\r\n  setStatePlaylist(playlistData) {\r\n    //this.setState({ playlist:playlist});\r\n    this.setState({ playlistInfo: playlistData });\r\n  }\r\n  /**\r\n   * 再生中情報をセット　再生\r\n   */\r\n  setPlayingInfo(playingInfo) {\r\n    this.setState({ playingInfo: playingInfo });\r\n    this.setState({ dismissibleIndex1: 1 });\r\n  }\r\n  /**\r\n   * プレイリストに追加\r\n   */\r\n  addPlaylist(movieId) {\r\n    if (this.state.searchedPlayingInfo) {\r\n      let newPlaylistInfo = this.state.playlistInfo;\r\n      newPlaylistInfo.push(this.state.searchedPlayingInfo);\r\n      this.setState({ playlistInfo: newPlaylistInfo });\r\n      this.setCookie();\r\n    }\r\n  }\r\n  /**\r\n   * プレイリストから削除\r\n   */\r\n  removePlaylist(index) {\r\n    let newPlaylistInfo = this.state.playlistInfo;\r\n    newPlaylistInfo.splice(index, 1);\r\n    this.setState({ playlistInfo: newPlaylistInfo });\r\n    this.setCookie();\r\n  }\r\n  /**\r\n   * cookie書き込み\r\n   */\r\n  setCookie() {\r\n    let playlist = [];\r\n    const playlistInfo = this.state.playlistInfo;\r\n    for (var i = 0; i < playlistInfo.length; i++) {\r\n      playlist.push(playlistInfo[i].id);\r\n    }\r\n    document.cookie = \"movie_id=\" + encodeURIComponent(playlist.join(\",\")) + \";expires=\" + new Date('2025/1/1').toUTCString();\r\n    \r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}